x2<-data[[2]][2:(rownum-1)]
x3<-data[[2]][3:rownum]
y1<-data[[3]][1:(rownum-2)]
y2<-data[[3]][2:(rownum-1)]
y3<-data[[3]][3:rownum]
zmat0<-cbind( x1, x2, y1, y2 , y3)
zmat0<-as.data.frame(zmat0)
zm1=zmat0[1:533,]
zm2=zmat0[401:(rownum-2), ]
fit_linear<-lm(y3~. , data=zm1 )
summary(fit_linear)
data<-read.csv("shanghai26.csv", header=TRUE)
data<-data[,-1]
rownum<-nrow(data)
x1<-data[[2]][1:(rownum-2)]
x2<-data[[2]][2:(rownum-1)]
x3<-data[[2]][3:rownum]
y1<-data[[3]][1:(rownum-2)]
y2<-data[[3]][2:(rownum-1)]
y3<-data[[3]][3:rownum]
zmat0<-cbind( x1, x2, y1, y2 , y3)
zmat0<-as.data.frame(zmat0)
zm1=zmat0[1:533,]
zm2=zmat0[401:(rownum-2), ]
fit_linear<-lm(y3~. , data=zm1 )
summary(fit_linear)
value_linear<-predict(fit_linear, newdata = zm2)
value_linear
value_linear<-predict(fit_linear, newdata = zm2)
I1=value_linear>3
I1
value_linear<-predict(fit_linear, newdata = zm2)
I1=1*(value_linear>3)
I1
value_linear<-predict(fit_linear, newdata = zm2)
I1=1*(value_linear>3)I
value_linear<-predict(fit_linear, newdata = zm2)
I1=1*(value_linear>3)
plot(I1, 1*(zm2[[5]]))
value_linear<-predict(fit_linear, newdata = zm2)
I1=1*(value_linear>3)
plot(I1, 1*(zm2[[5]]>3))
value_linear<-predict(fit_linear, newdata = zm2)
I1=1*(value_linear>3)
plot(I1, 1*(zm2[[5]]>3))
table(I1, 1*(zm2[[5]]>3) )
value_linear<-predict(fit_linear, newdata = zm2)
I1=1*(value_linear>3)
plot(I1, 1*(zm2[[5]]>3))
table(I1, (1*zm2[[5]]>3) )
I1
1*zm2[[5]]>3
value_linear<-predict(fit_linear, newdata = zm2)
I1=1*(value_linear>3)
plot(I1, 1*(zm2[[5]]>3))
table(I1, 1*(zm2[[5]]>3) )
1*(zm2[[5]]>3)
I1
zm2[[5]]>3
y3>3
I1[3]
View(I1)
I1<-value_linear>3
I1<-as.factor(I1)
I2<- zm2[[5]]>3
I2=as.factor(I2)
table(I1. I2)
table(I1, I2)
I2
I1
I1=unname(I1)
I1
table(I1, I2)
table(I1)
value_linear<-predict(fit_linear, newdata = zm2)
I1=1*(value_linear>3)
plot(I1, 1*(zm2[[5]]>3))
table(unname(I1), 1*(zm2[[5]]>3) )
value_linear<-predict(fit_linear, newdata = zm2)
I1=1*(value_linear>3)
plot(I1, 1*(zm2[[5]]>3))
table(unname(I1), 1*(zm2[[5]]>3) ,row.names=c("1's", "0's") )
value_linear<-predict(fit_linear, newdata = zm2)
I1=1*(value_linear>3)
plot(I1, 1*(zm2[[5]]>3))
table(unname(I1), 1*(zm2[[5]]>3)  )
library(nnet)
p3.data<-read.csv("shanghai26.csv", header = FALSE)[-1,-1]
p3.data<-p3.data[2:5]
p3.data<-apply(p3.data,1:2, as.numeric)
data.mag1<-p3.data[1:832,1]
v1<-data.mag1[1:600]
v2<-data.mag1[2:601]
v3<-data.mag1[3:602]
v4<-data.mag1[4:603]
train.input<-data.frame(cbind(v1,v2,v3,v4))
#names(train.input)<-c('X1','X2','X3','X4')
tar<-data.mag1[5:604]
tar<-tar>3
tar<-1*tar
train.target<-data.frame(tar)
#names(train.target)<-c('Y')
dat.in<-data.frame(train.target,train.input)
mod1<-nnet(train.input,train.target,data=dat.in,size=100, maxit = 2000,linout = F)
#plot.nnet(mod1)
val1<-data.mag1[605:828]
val2<-data.mag1[606:829]
val3<-data.mag1[607:830]
val4<-data.mag1[608:831]
val.input<-data.frame(cbind(val1,val2,val3,val4))
p<-predict(mod1,val.input)
p<-p>=0.5
p<-1*p
sum(p)
val.target<-data.mag1[609:832]
val.target<-val.target>3
val.target<-data.frame(1*val.target)
sum(val.target)
r1<-p*val.target
r2<-(1-p)*(1-val.target)
r3<-p*(1-val.target)
r4<-(1-p)*(val.target)
sum(r1)
sum(r2)
sum(r3)
sum(r4)
table(p, val.target)
length(p)
length(val.target)
val.target
table(p, as.vector(val.target))
length(as.vector(val.target))
table(p, data.mag1[609:832])
table(p, data.mag1[609:832]>3])
table(p, data.mag1[609:832]>3)
library(nnet)
p3.data<-read.csv("shanghai26.csv", header = FALSE)[-1,-1]
p3.data<-p3.data[2:5]
p3.data<-apply(p3.data,1:2, as.numeric)
data.mag1<-p3.data[1:832,1]
v1<-data.mag1[1:600]
v2<-data.mag1[2:601]
v3<-data.mag1[3:602]
v4<-data.mag1[4:603]
train.input<-data.frame(cbind(v1,v2,v3,v4))
#names(train.input)<-c('X1','X2','X3','X4')
tar<-data.mag1[5:604]
tar<-tar>3
tar<-1*tar
train.target<-data.frame(tar)
#names(train.target)<-c('Y')
dat.in<-data.frame(train.target,train.input)
mod1<-nnet(train.input,train.target,data=dat.in,size=100, maxit = 2000,linout = F)
#plot.nnet(mod1)
val1<-data.mag1[605:828]
val2<-data.mag1[606:829]
val3<-data.mag1[607:830]
val4<-data.mag1[608:831]
val.input<-data.frame(cbind(val1,val2,val3,val4))
p<-predict(mod1,val.input)
p<-p>=0.5
p<-1*p
sum(p)
val.target<-data.mag1[609:832]
val.target<-val.target>3
val.target<-data.frame(1*val.target)
sum(val.target)
r1<-p*val.target
r2<-(1-p)*(1-val.target)
r3<-p*(1-val.target)
r4<-(1-p)*(val.target)
#sum(r1) #
#sum(r2)
#sum(r3)
#sum(r4)
table(p, data.mag1[609:832]>3, row.names="predicted outcomes", dnn="real values")
table(p, data.mag1[609:832]>3, row.names=c("predicted outcomes1 ","outcome2") , dnn="real values")
table(p, data.mag1[609:832]>3, row.names("predicted outcomes1 ","outcome2") , dnn="real values")
table(p, data.mag1[609:832]>3, row.names(train.target), dnn="real values")
table(p, data.mag1[609:832]>3,  dnn="real values")
table(p, data.mag1[609:832]>3)
library(nnet)
p3.data<-read.csv("shanghai26.csv", header = FALSE)[-1,-1]
p3.data<-p3.data[2:5]
p3.data<-apply(p3.data,1:2, as.numeric)
data.mag1<-p3.data[1:832,1]
v1<-data.mag1[1:600]
v2<-data.mag1[2:601]
v3<-data.mag1[3:602]
v4<-data.mag1[4:603]
train.input<-data.frame(cbind(v1,v2,v3,v4))
#names(train.input)<-c('X1','X2','X3','X4')
tar<-data.mag1[5:604]
tar<-tar>3
tar<-1*tar
train.target<-data.frame(tar)
#names(train.target)<-c('Y')
dat.in<-data.frame(train.target,train.input)
mod1<-nnet(train.input,train.target,data=dat.in,size=100, maxit = 2000,linout = F)
#plot.nnet(mod1)
val1<-data.mag1[605:828]
val2<-data.mag1[606:829]
val3<-data.mag1[607:830]
val4<-data.mag1[608:831]
val.input<-data.frame(cbind(val1,val2,val3,val4))
p<-predict(mod1,val.input)
p<-p>=0.5
p<-1*p
sum(p)
val.target<-data.mag1[609:832]
val.target<-val.target>3
val.target<-data.frame(1*val.target)
sum(val.target)
r1<-p*val.target
r2<-(1-p)*(1-val.target)
r3<-p*(1-val.target)
r4<-(1-p)*(val.target)
#sum(r1) #
#sum(r2)
#sum(r3)
#sum(r4)
table(p, data.mag1[609:832]>3)
sprintf("accuracy=%f", sum(p==(1*data.mag1[609:832])) / length(p) )
sprintf("accuracy=%f", sum(p=(1*data.mag1[609:832])) / length(p) )
length(p)
sum(p=(1*data.mag1[609:832]))
sum(p=(1*(data.mag1[609:832]>3))
)
sprintf("accuracy=%f", sum(p=(1* (data.mag1[609:832]) >3) ) / length(p) )
#p3.data<-read.csv("shanghai26.csv", header = FALSE)[-1,-1]
#p3.data<-p3.data[2:5]
#p3.data<-apply(p3.data,1:2, as.numeric)
#data.mag1<-p3.data[1:832,1]
data.mag1<-data[[3]]
v1<-data.mag1[1:600]
v2<-data.mag1[2:601]
v3<-data.mag1[3:602]
v4<-data.mag1[4:603]
train.input<-data.frame(cbind(v1,v2,v3,v4))
#names(train.input)<-c('X1','X2','X3','X4')
tar<-data.mag1[5:604]
tar<-tar>3
tar<-1*tar
train.target<-data.frame(tar)
#names(train.target)<-c('Y')
dat.in<-data.frame(train.target,train.input)
mod1<-nnet(train.input,train.target,data=dat.in,size=100, maxit = 2000,linout = F)
#plot.nnet(mod1)
val1<-data.mag1[605:828]
val2<-data.mag1[606:829]
val3<-data.mag1[607:830]
val4<-data.mag1[608:831]
val.input<-data.frame(cbind(val1,val2,val3,val4))
p<-predict(mod1,val.input)
p<-p>=0.5
p<-1*p
#sum(p)
val.target<-data.mag1[609:832]
val.target<-val.target>3
val.target<-data.frame(1*val.target)
#sum(val.target)
r1<-p*val.target
r2<-(1-p)*(1-val.target)
r3<-p*(1-val.target)
r4<-(1-p)*(val.target)
#sum(r1) #
#sum(r2)
#sum(r3)
#sum(r4)
table(p, data.mag1[609:832]>3)
sprintf("accuracy=%f", sum(p=(1* (data.mag1[609:832]) >3) ) / length(p) )
#knn for magnitude2
data.mag1<-p3.data[1:832,2]
v1<-data.mag1[1:600]
v2<-data.mag1[2:601]
v3<-data.mag1[3:602]
v4<-data.mag1[4:603]
train.input<-cbind(v1,v2,v3,v4)
#names(train.input)<-c('X1','X2','X3','X4')
tar<-data.mag1[5:604]
tar<-tar>3
tar<-1*tar
train.target<-tar
#names(train.target)<-c('Y')
val1<-data.mag1[605:828]
val2<-data.mag1[606:829]
val3<-data.mag1[607:830]
val4<-data.mag1[608:831]
val.input<-cbind(val1,val2,val3,val4)
mod2<-knn(train.input,val.input,train.target,k=15,prob=FALSE,use.all=TRUE)
library(kknn)
install.packages("kknn")
library(kknn)
library(class)
library(sampling)
install.packages("smapling")
install.packages("samling")
install.packages("sampling")
library(kknn)
library(class)
library(sampling)
p3.data<-read.csv("shanghai26.csv", header = FALSE)[-1,-1] #choose shanghai26.csv
p3.data<-p3.data[2:5]
p3.data<-apply(p3.data,1:2, as.numeric)
data.mag1<-p3.data[1:832,1]
v1<-data.mag1[1:600]
v2<-data.mag1[2:601]
v3<-data.mag1[3:602]
v4<-data.mag1[4:603]
train.input<-cbind(v1,v2,v3,v4)
#names(train.input)<-c('X1','X2','X3','X4')
tar<-data.mag1[5:604]
tar<-tar>3
tar<-1*tar
train.target<-tar
#names(train.target)<-c('Y')
val1<-data.mag1[605:828]
val2<-data.mag1[606:829]
val3<-data.mag1[607:830]
val4<-data.mag1[608:831]
val.input<-cbind(val1,val2,val3,val4)
mod2<-knn(train.input,val.input,train.target,k=15,prob=FALSE,use.all=TRUE)
mod2
p<-data.frame(mod2)
sum(p)
library(kknn)
library(class)
library(sampling)
p3.data<-read.csv("shanghai26.csv", header = FALSE)[-1,-1] #choose shanghai26.csv
p3.data<-p3.data[2:5]
p3.data<-apply(p3.data,1:2, as.numeric)
data.mag1<-p3.data[1:832,1]
v1<-data.mag1[1:600]
v2<-data.mag1[2:601]
v3<-data.mag1[3:602]
v4<-data.mag1[4:603]
train.input<-cbind(v1,v2,v3,v4)
#names(train.input)<-c('X1','X2','X3','X4')
tar<-data.mag1[5:604]
tar<-tar>3
tar<-1*tar
train.target<-tar
#names(train.target)<-c('Y')
val1<-data.mag1[605:828]
val2<-data.mag1[606:829]
val3<-data.mag1[607:830]
val4<-data.mag1[608:831]
val.input<-cbind(val1,val2,val3,val4)
mod2<-knn(train.input,val.input,train.target,k=15,prob=FALSE,use.all=TRUE)
mod2
p<-data.frame(mod2)
sum(p)
library(kknn)
library(class)
library(sampling)
p3.data<-read.csv("shanghai26.csv", header = FALSE)[-1,-1] #choose shanghai26.csv
p3.data<-p3.data[2:5]
p3.data<-apply(p3.data,1:2, as.numeric)
data.mag1<-p3.data[1:832,1]
v1<-data.mag1[1:600]
v2<-data.mag1[2:601]
v3<-data.mag1[3:602]
v4<-data.mag1[4:603]
train.input<-cbind(v1,v2,v3,v4)
#names(train.input)<-c('X1','X2','X3','X4')
tar<-data.mag1[5:604]
tar<-tar>3
tar<-1*tar
train.target<-tar
#names(train.target)<-c('Y')
val1<-data.mag1[605:828]
val2<-data.mag1[606:829]
val3<-data.mag1[607:830]
val4<-data.mag1[608:831]
val.input<-cbind(val1,val2,val3,val4)
mod2<-knn(train.input,val.input,train.target,k=15,prob=FALSE,use.all=TRUE)
mod2
p<-data.frame(mod2)
#sum(p)
val.target<-data.mag1[609:832]
val.target<-val.target>3
val.target<-data.frame(1*val.target)
sum(val.target)
p<-apply(p,2, as.numeric)
r1<-p*val.target
r2<-(1-p)*(1-val.target)
r3<-p*(1-val.target)
r4<-(1-p)*(val.target)
sum(r1)
sum(r2)
sum(r3)
sum(r4)
library(kknn)
library(class)
library(sampling)
p3.data<-read.csv("shanghai26.csv", header = FALSE)[-1,-1] #choose shanghai26.csv
p3.data<-p3.data[2:5]
p3.data<-apply(p3.data,1:2, as.numeric)
data.mag1<-p3.data[1:832,1]
v1<-data.mag1[1:600]
v2<-data.mag1[2:601]
v3<-data.mag1[3:602]
v4<-data.mag1[4:603]
train.input<-cbind(v1,v2,v3,v4)
#names(train.input)<-c('X1','X2','X3','X4')
tar<-data.mag1[5:604]
tar<-tar>3
tar<-1*tar
train.target<-tar
#names(train.target)<-c('Y')
val1<-data.mag1[605:828]
val2<-data.mag1[606:829]
val3<-data.mag1[607:830]
val4<-data.mag1[608:831]
val.input<-cbind(val1,val2,val3,val4)
mod2<-knn(train.input,val.input,train.target,k=15,prob=FALSE,use.all=TRUE)
mod2
p<-data.frame(mod2)
#sum(p)
val.target<-data.mag1[609:832]
val.target<-val.target>3
val.target<-data.frame(1*val.target)
#sum(val.target)
p<-apply(p,2, as.numeric)
r1<-p*val.target
r2<-(1-p)*(1-val.target)
r3<-p*(1-val.target)
r4<-(1-p)*(val.target)
#sum(r1)
#sum(r2)
#sum(r3)
#sum(r4)
table(p, data.mag1[609:832]>3)
sprintf("accuracy=%f", sum(p=(1* (data.mag1[609:832]) >3) ) / length(p) )
data.mag1<-p3.data[1:832,2]
v1<-data.mag1[1:600]
v2<-data.mag1[2:601]
v3<-data.mag1[3:602]
v4<-data.mag1[4:603]
train.input<-cbind(v1,v2,v3,v4)
#names(train.input)<-c('X1','X2','X3','X4')
tar<-data.mag1[5:604]
tar<-tar>3
tar<-1*tar
train.target<-tar
#names(train.target)<-c('Y')
val1<-data.mag1[605:828]
val2<-data.mag1[606:829]
val3<-data.mag1[607:830]
val4<-data.mag1[608:831]
val.input<-cbind(val1,val2,val3,val4)
mod2<-knn(train.input,val.input,train.target,k=15,prob=FALSE,use.all=TRUE)
mod2
p<-data.frame(mod2)
#sum(p)
val.target<-data.mag1[609:832]
val.target<-val.target>3
val.target<-data.frame(1*val.target)
#sum(val.target)
p<-apply(p,2, as.numeric)
r1<-p*val.target
r2<-(1-p)*(1-val.target)
r3<-p*(1-val.target)
r4<-(1-p)*(val.target)
#sum(r1)
#sum(r2)
#sum(r3)
#sum(r4)
table(p, data.mag1[609:832]>3)
sprintf("accuracy=%f", sum(p=(1* (data.mag1[609:832]) >3) ) / length(p) )
library(nnet)
p3.data<-read.csv("shanghai26.csv", header = FALSE)[-1,-1]
p3.data<-p3.data[2:5]
p3.data<-apply(p3.data,1:2, as.numeric)
data.mag1<-p3.data[1:832,1]
v1<-data.mag1[1:600]
v2<-data.mag1[2:601]
v3<-data.mag1[3:602]
v4<-data.mag1[4:603]
train.input<-data.frame(cbind(v1,v2,v3,v4))
#names(train.input)<-c('X1','X2','X3','X4')
tar<-data.mag1[5:604]
tar<-tar>3
tar<-1*tar
train.target<-data.frame(tar)
#names(train.target)<-c('Y')
dat.in<-data.frame(train.target,train.input)
mod1<-nnet(train.input,train.target,data=dat.in,size=100, maxit = 2000,linout = F)
val1<-data.mag1[605:828]
val2<-data.mag1[606:829]
val3<-data.mag1[607:830]
val4<-data.mag1[608:831]
val.input<-data.frame(cbind(val1,val2,val3,val4))
p<-predict(mod1,val.input)
p<-p>=0.5
p<-1*p
#sum(p)
val.target<-data.mag1[609:832]
val.target<-val.target>3
val.target<-data.frame(1*val.target)
#sum(val.target)
r1<-p*val.target
r2<-(1-p)*(1-val.target)
r3<-p*(1-val.target)
r4<-(1-p)*(val.target)
#sum(r1) #
#sum(r2)
#sum(r3)
#sum(r4)
table(p, data.mag1[609:832]>3)
sprintf("accuracy=%f", sum(p=(1* (data.mag1[609:832]) >3) ) / length(p) )
install.packages("rticles")
